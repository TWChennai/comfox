group 'comfox-api'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'gradle-one-jar'

sourceCompatibility = 1.8

task wrapper(type: Wrapper) {
    gradleVersion = '2.0'
}

task getJar(type: OneJar) {
    mainClass = 'com.comfox.api.ComfoxApiApplication'
    archiveName = 'comfox-api.jar'
}

repositories {
    mavenCentral()
}

sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/test/java/com/comfox/api/services')
        }
        resources.srcDir file('src/test/resources')
    }
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.github.rholder:gradle-one-jar:1.0.4'
    }
}


dependencies {
    compile(group: 'io.dropwizard', name: 'dropwizard-core', version: '0.9.2')
    compile(group: 'io.dropwizard', name: 'dropwizard-testing', version: '0.9.2')
    compile(group: 'com.thinkaurelius.titan', name: 'titan-core', version: '1.0.0') {
        exclude group: 'com.codahale.metrics', module: 'metrics-core'
    }
    compile 'com.tinkerpop.gremlin:gremlin-java:2.6.0'
    compile(group: 'com.thinkaurelius.titan', name: 'titan-cassandra', version: '1.0.0'){
        exclude group: 'com.codahale.metrics', module: 'metrics-core'
    }
    compile(group: 'com.thinkaurelius.titan', name: 'titan-es', version: '1.0.0'){
        exclude group: 'com.codahale.metrics', module: 'metrics-core'
    }
    integrationTestCompile(group: 'com.thinkaurelius.titan', name: 'titan-core', version: '1.0.0'){
        exclude group: 'com.codahale.metrics', module: 'metrics-core'
    }
    integrationTestCompile 'com.tinkerpop.gremlin:gremlin-java:2.6.0'
    testCompile group: 'junit', name: 'junit', version: '4.11'
}

task integrationTest(type: Test) {
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
    outputs.upToDateWhen { false }
}

check.dependsOn integrationTest